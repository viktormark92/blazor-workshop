@page "/authentication/login"
@inject OrderState OrderState
@inject NavigationManager NavigationManager
@*<RemoteAuthenticatorView Action="@RemoteAuthenticationActions.LogIn">

    </RemoteAuthenticatorView>*@

<RemoteAuthenticatorViewCore TAuthenticationState="PizzaAuthenticationState"
                             AuthenticationState="RemoteAuthenticationState"
                             OnLogInSucceeded="RestorePizza"
                             Action="@RemoteAuthenticationActions.LogIn" />

@* Customize the authentication user interface
    https://docs.microsoft.com/hu-hu/aspnet/core/blazor/security/webassembly/additional-scenarios?view=aspnetcore-5.0#customize-the-authentication-user-interface-1 *@

@code{
    [Parameter] public string Action { get; set; }

    public PizzaAuthenticationState RemoteAuthenticationState { get; set; } = new PizzaAuthenticationState();

    protected override void OnInitialized()
    {
        if (RemoteAuthenticationActions.IsAction(RemoteAuthenticationActions.LogIn, Action))
        {
            // Preserve the current order so that we don't loose it
            RemoteAuthenticationState.Order = OrderState.Order;
        }
    }

    private void RestorePizza(PizzaAuthenticationState pizzaState)
    {
        if (pizzaState.Order != null)
        {
            OrderState.ReplaceOrder(pizzaState.Order);
        }
    }
}