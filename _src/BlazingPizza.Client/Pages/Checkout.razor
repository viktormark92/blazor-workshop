@* By default, all pages allow for anonymous access, but we can specify that the user must be logged in to access the checkout page by 
    adding the [Authorize] attribute at the top of Checkout.razor: *@
@attribute [Authorize]

@page "/checkout"

@inject OrdersClient OrdersClient
@inject OrderState OrderState
@inject NavigationManager NavigationManager

<div class="main">
    <EditForm Model="OrderState.Order.DeliveryAddress" OnValidSubmit="PlaceOrder">
        <div class="checkout-cols">
            <div class="checkout-order-details">
                ... leave this div unchanged ...
            </div>

            <div class="checkout-delivery-address">
                <h4>Deliver to...</h4>
                <AddressEditor Address="OrderState.Order.DeliveryAddress" />
            </div>
        </div>

        <button type="submit" disabled="@IsSubmitting" class="checkout-button btn btn-warning">
            Place order
        </button>
        <DataAnnotationsValidator />
    </EditForm>
</div>

@code {
    protected bool IsSubmitting { get; set; }
    async Task PlaceOrder()
    {
        IsSubmitting = true;
        try
        {
            var newOrderId = await OrdersClient.PlaceOrder(OrderState.Order);
            OrderState.ResetOrder();
            NavigationManager.NavigateTo($"myorders/{newOrderId}");
        }
        catch (AccessTokenNotAvailableException ex)
        {
            ex.Redirect();
        }
        finally
        {

            IsSubmitting = false;
        }
    }

}
